name: CI

env: 
  IMAGE_NAME: activemq-artemis-self-provisioning-plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the repo
        uses: actions/checkout@v3

      # - name: Setup node and use cached node-modules
      #   uses: ./.github/actions/cache-restore
      #   id: cache-node-modules
      #   with:
      #     node-version: 16.6.2
      # - run: yarn run build
      
      - uses: actions/setup-node@v3
        with:
          node-version: 16.6.2

      - name: Get node version
        id: node
        run: |
            echo ":: set-output name=version::$(node -v)"

      - name: Get node_modules cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
              ~/.yarn
              **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ steps.node.outputs.version }}

      - run: yarn install --frozen-lockfile

      - name: Check for uncommited changes
        run: git diff --quiet --exit-code
      
      # TODO: uncomment after adding tests
      # - name: Execute tests
      #   run: yarn run test

      # TODO: uncomment after fixing storybook issue: https://github.com/openshift/dynamic-plugin-sdk/issues/216
      # - name: Build storybook
      #   run: |
      #     yarn run build-storybook -- --quiet --loglevel silent

      # - name: Deploy story book to github pages ðŸš€
      #   uses: JamesIves/github-pages-deploy-action@v4.4.0
      #   with:
      #     branch: gh-pages # The branch the action should deploy to.
      #     folder: storybook-static # The folder the action should deploy.

      - name: Build the docker image
        if: ${{ github.event_name == 'push' }}
        run: docker build --label quay.expires-after=90d --label git-sha=$GITHUB_SHA --tag $IMAGE_NAME:dev.latest .

      - name: Push the image
        if: ${{ github.event_name == 'push' }}
        run: >
          export IMAGE_TAG=dev.$(date +%Y%m%d).$(git rev-parse --short "$GITHUB_SHA") &&
          docker login quay.io --username=${{ secrets.QUAY_USERNAME }} --password-stdin <<< ${{ secrets.QUAY_PASSWORD }} &&
          docker tag $IMAGE_NAME:dev.latest quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:$IMAGE_TAG &&
          docker push quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:$IMAGE_TAG &&
          docker tag $IMAGE_NAME:dev.latest quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:dev.latest &&
          docker push quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:dev.latest



